--DDL para la definicion de la tabla Choferes
CREATE TABLE CHOFERES
(
    ID_CHOFER NUMBER NOT NULL,
    NOMBRE VARCHAR2(200),
    AP_PATERNO VARCHAR2(200),
    AP_MATERNO VARCHAR2(200),
    LICENCIA VARCHAR2(45),
    TELEFONO VARCHAR2(45),
    FECHA_NACIMIENTO DATE,
    DISPONIBILIDAD NUMBER,
    CONSTRAINT CHOFERES_PK PRIMARY KEY(ID_CHOFER)
);

--DDL PARA LA DEFINICION DE LA TABLA  CAMIONES
CREATE TABLE CAMIONES 
(
    ID_CAMION NUMBER NOT NULL,
    MATRICULA VARCHAR2(45),
    TIPO_CAMION VARCHAR2(45),
    MODELO NUMBER,
    MARCA VARCHAR2(45),
    CAPACIDAD NUMBER,
    KILOMETRAJE FLOAT,
    DISPONIBILIDAD NUMBER,
    CONSTRAINT CAMIONES_PK PRIMARY KEY(ID_CAMION)
);

--DDL PARA LA DEFINICION DE LA TABLA DIRECCIONES
CREATE TABLE DIRECCIONES
(
    ID_DIRECCION NUMBER NOT NULL,
    CALLE VARCHAR2(45),
    NUMERO VARCHAR2(45),
    COLONIA VARCHAR2(45),
    CIUDAD VARCHAR2(45),
    ESTADO VARCHAR2(45),
    CP VARCHAR2(45),
    CONSTRAINT DIRECCIONES_PK PRIMARY KEY(ID_DIRECCION)
);

--DDL PARA LA DEFINICION DE LA TABLA RUTAS
CREATE TABLE RUTAS
(
    ID_RUTA NUMBER NOT NULL,
    CAMION_ID NUMBER NOT NULL,
    CHOFER_ID NUMBER NOT NULL,
    DIRECCION_ORIGEN_ID NUMBER NOT NULL,
    DIRECCION_DESTINO_ID NUMBER NOT NULL,
    DISTANCIA FLOAT,
    FECHA_SALIDA DATE,
    FECHA_LLEGADA_ESTIMADA DATE,
    FECHA_LLEGADA_REAL DATE,
    A_TIEMPO NUMBER,
    CONSTRAINT RUTAS_PK PRIMARY KEY(ID_RUTA),
    --DEFINICION DE LAS LLAVES FORANEAS
    CONSTRAINT RUTAS_CHOFERES_FK FOREIGN KEY(CHOFER_ID)
        REFERENCES CHOFERES(ID_CHOFER),
    CONSTRAINT RUTAS_CAMIONES_FK FOREIGN KEY(CAMION_ID)
        REFERENCES CAMIONES(ID_CAMION),
    CONSTRAINT RUTAS_ORIGEN_FK FOREIGN KEY(DIRECCION_ORIGEN_ID)
        REFERENCES DIRECCIONES(ID_DIRECCION),
    CONSTRAINT RUTAS_DESTINO_FK FOREIGN KEY(DIRECCION_DESTINO_ID)
        REFERENCES DIRECCIONES(ID_DIRECCION) 
);

--DDL PARA LA DEFINICION DE LA TABLA
CREATE TABLE CARGAMENTOS
(
    ID_CARGAMENTO NUMBER NOT NULL,
    RUTA_ID NUMBER NOT NULL,
    DESCRIPCION VARCHAR2(45),
    PESO FLOAT,
    ESTATUS NUMBER,
    CONSTRAINT CARGAMENTO_PK PRIMARY KEY(ID_CARGAMENTO),
    CONSTRAINT CARGAMENTOS_RUTAS_FK FOREIGN KEY(RUTA_ID)
        REFERENCES RUTAS(ID_RUTA)
);

--DDL PARA LA DEFINICION DE UNA SECUENCIA
CREATE SEQUENCE "SEQUENCE1"
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1;
    
--DDL PARA LA DEFINICION DE UNA SECUENCIA
CREATE SEQUENCE "SEQUENCE2"
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1;

--DDL PARA LA DEFINICION DE UNA SECUENCIA
CREATE SEQUENCE "SEQUENCE3"
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1;
    
--DDL PARA LA DEFINICION DE UNA SECUENCIA
CREATE SEQUENCE "SEQUENCE4"
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1;
    
--DDL PARA LA DEFINICION DE UNA SECUENCIA
CREATE SEQUENCE "SEQUENCE5"
    MINVALUE 1
    MAXVALUE 9999999999999999999999999999
    INCREMENT BY 1
    START WITH 1;
        
--DML PARA LA INSERCION DE UN CHOFER
INSERT INTO CHOFERES (ID_CHOFER, NOMBRE, AP_PATERNO, AP_MATERNO, LICENCIA, TELEFONO, FECHA_NACIMIENTO, DISPONIBILIDAD)
VALUES
(SEQUENCE1.NEXTVAL,'JAVIER', 'TORRES', 'TIMAL', 'FR-1212', '2225252525', TO_DATE('2020-10-10 13:00:00','YYYY-MM-DD HH24:mi:ss'), 1);


--DML PARA LA INSERCION DE UN CHOFER
INSERT INTO CHOFERES (ID_CHOFER, NOMBRE, AP_PATERNO, AP_MATERNO, LICENCIA, TELEFONO, FECHA_NACIMIENTO, DISPONIBILIDAD)
VALUES
(SEQUENCE1.NEXTVAL,'CARLOS', 'MARQUEZ', 'SILVA', 'FR-1414', '23813338493', TO_DATE('1999-05-11 12:30:00','YYYY-MM-DD HH24:mi:ss'), 0);

--DML PARA LA INSERCION DE UN CAMION
INSERT INTO CAMIONES (ID_CAMION, MATRICULA, TIPO_CAMION, MODELO, MARCA, CAPACIDAD, KILOMETRAJE, DISPONIBILIDAD)
VALUES
(SEQUENCE2.NEXTVAL, 'CAMION', 'KJD-245-K', 2023, 'MERCEDES', 5000, 12000.00, 1);

--DML PARA LA INSERCION DE UN CAMION
INSERT INTO CAMIONES (ID_CAMION, MATRICULA, TIPO_CAMION, MODELO, MARCA, CAPACIDAD, KILOMETRAJE, DISPONIBILIDAD)
VALUES
(SEQUENCE2.NEXTVAL, 'REMOLQUE', 'SJT-516-R', 2019, 'peugeot', 60000, 125000.00, 1);

--DML PARA LA INSERCION DE UNA DIRECCION
INSERT INTO DIRECCIONES (ID_DIRECCION, CALLE, NUMERO, COLONIA, CIUDAD, ESTADO, CP)
VALUES
(SEQUENCE3.NEXTVAL, 'LA HIGUERA', '13', 'EX-HACIENDA MAYORAZGO', 'PUEBLA', 'PUEBLA', '72480');

--DML PARA LA INSERCION DE UNA DIRECCION
INSERT INTO DIRECCIONES (ID_DIRECCION, CALLE, NUMERO, COLONIA, CIUDAD, ESTADO, CP)
VALUES
(SEQUENCE3.NEXTVAL, '30A ORIENTE', '148-B', 'VILLAS VERONA II', 'TEHUACAN', 'PUEBLA', '75719');

--DML BORRAR DATOS DE LA FILA 3 Y 4
DELETE FROM DIRECCIONES
WHERE ID_DIRECCION =3;

--DML IMPRIMIR TABLA
SELECT * FROM CAMIONES;

--DML ACTUALIZAR
UPDATE CAMIONES 
SET MATRICULA='SJT-516-R'
WHERE ID_CAMION =22;

--DML PARA LA INSERCION DE UNA RUTA
INSERT INTO RUTAS (ID_RUTA, CAMION_ID, CHOFER_ID, DIRECCION_ORIGEN_ID, DIRECCION_DESTINO_ID, DISTANCIA, FECHA_SALIDA, FECHA_LLEGADA_ESTIMADA, FECHA_LLEGADA_REAL, A_TIEMPO)
VALUES
(SEQUENCE4.NEXTVAL, 21, 21, 21, 22, 144.05, TO_DATE('2024-01-05 12:30:00','YYYY-MM-DD HH24:mi:ss'), TO_DATE('2024-01-09 12:30:00','YYYY-MM-DD HH24:mi:ss'), TO_DATE('2024-01-07 14:00:00','YYYY-MM-DD HH24:mi:ss'), 1);

--DML PARA LA INSERCION DE UNA RUTA
INSERT INTO RUTAS (ID_RUTA, CAMION_ID, CHOFER_ID, DIRECCION_ORIGEN_ID, DIRECCION_DESTINO_ID, DISTANCIA, FECHA_SALIDA, FECHA_LLEGADA_ESTIMADA, FECHA_LLEGADA_REAL, A_TIEMPO)
VALUES
(SEQUENCE4.NEXTVAL, 22, 22, 22, 21, 140.05, TO_DATE('2024-01-08 12:30:00','YYYY-MM-DD HH24:mi:ss'), TO_DATE('2024-01-10 12:30:00','YYYY-MM-DD HH24:mi:ss'), TO_DATE('2024-01-09 14:00:00','YYYY-MM-DD HH24:mi:ss'), 1);

--DML PARA LA INSERCION DE CARGAMENTOS
INSERT INTO CARGAMENTOS (ID_CARGAMENTO, RUTA_ID, DESCRIPCION, PESO, ESTATUS)
VALUES
(SEQUENCE5.NEXTVAL, 23, 'CAMISAS', 50.05, 1);

--DML PARA LA INSERCION DE CARGAMENTOS
INSERT INTO CARGAMENTOS (ID_CARGAMENTO, RUTA_ID, DESCRIPCION, PESO, ESTATUS)
VALUES
(SEQUENCE5.NEXTVAL,23, 'JEANS', 100.05, 1);

COMMIT;

--DDL PARA LA CREACION DE UNA FUNCION QUE RECIBA COMO ARGUMENTO DOS NUMEROS Y REGRESE LA SUMA DE ELLOS
CREATE OR REPLACE FUNCTION SUMA(X NUMBER, Y NUMBER)
    RETURN NUMBER
IS
    SUMA NUMBER;
BEGIN
    SUMA:= X + Y;
    RETURN SUMA;
END;

--DDL PARA LA CREACION DE UNA FUNCION QUE RECIBA COMO ARGUMENTO EL NUMERO DE RUTAS REALIZADAS POR UN CHOFER Y REGRESE EL MONTO A COBRAR, SIENDO QUE POR CADA RUTTA TERMINADA SE LE DARA $100 AL CHOFER
CREATE OR REPLACE FUNCTION CALCULARSUELDO(RUTAS_TERMINADAS NUMBER)
    RETURN NUMBER
IS
    SUELDO NUMBER;
BEGIN 
    SUELDO:= RUTAS_TERMINADAS * 100;
    RETURN SUELDO;
END;

--DML PARA INNVOCAR UNA FUNCION, DUAL ES UNA TABLA QUE NO SIRVE MAS QUE PARA ACOMPLETAR ESCENEARIOS COMO ESTE EN LA SINTAXIS
SELECT CALCULARSUELDO(3) FROM DUAL;

SELECT * FROM CHOFERES;
--DML CALCULAR SUELDO
SELECT ID_CHOFER, NOMBRE, AP_PATERNO, AP_MATERNO, LICENCIA, CALCULARSUELDO((SELECT COUNT(*) FROM RUTAS WHERE CHOFER_ID = ID_CHOFER)) SUELDO FROM CHOFERES;





