/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.18
 * Generated at: 2024-01-18 20:33:33 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.silva.app.rutas.models.*;
import com.silva.app.rutas.models.enums.*;
import java.time.format.*;

public final class edicionCamion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.time.format");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("com.silva.app.rutas.models");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.silva.app.rutas.models.enums");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    Marcas[] marcas=  (Marcas[]) request.getAttribute("marcas");

      out.write('\r');
      out.write('\n');

    Tipos[] tipos=  (Tipos[]) request.getAttribute("tipos");

      out.write('\r');
      out.write('\n');

    String[] annios=  (String[]) request.getAttribute("annios");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

  Map<String, String> errores=(Map<String,String>) request.getAttribute("errores");
  Camion camion = (Camion) request.getAttribute("camion");
  Boolean estado = camion.getDisponibilidad();
  String disponible = estado == true ? "checked" : "";

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-2.2.4.min.js\"\r\n");
      out.write("        integrity=\"sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css\">\r\n");
      out.write("<script src=\"//cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar navbar-inverse\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("            <div class=\"navbar-header\" id=\"div1\">\r\n");
      out.write("                <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\"\r\n");
      out.write("                    data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                </button>\r\n");
      out.write("                                    <a class=\"navbar-brand\" href=\"#\" id=\"enlace1\">Rutas App</a>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("                <ul class=\"nav navbar-nav\">\r\n");
      out.write("                    <li class=\"dropdown\">\r\n");
      out.write("                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\r\n");
      out.write("                            aria-haspopup=\"true\" aria-expanded=\"false\">Choferes<span\r\n");
      out.write("                                class=\"caret\"></span></a>\r\n");
      out.write("                        <ul class=\"dropdown-menu\">\r\n");
      out.write("                            <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/choferes/listar\">Lista Choferes</a></li>\r\n");
      out.write("                            <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/choferes/alta\">Alta Chofer</a></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    </li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <li class=\"dropdown\">\r\n");
      out.write("                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\r\n");
      out.write("                            aria-haspopup=\"true\" aria-expanded=\"false\">Camiones<span\r\n");
      out.write("                                class=\"caret\"></span></a>\r\n");
      out.write("                        <ul class=\"dropdown-menu\">\r\n");
      out.write("                            <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/camiones/listar\">Lista Camiones</a></li>\r\n");
      out.write("                            <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/camiones/alta\">Alta Camion</a></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <li class=\"dropdown\">\r\n");
      out.write("                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\r\n");
      out.write("                            aria-haspopup=\"true\" aria-expanded=\"false\">Rutas<span\r\n");
      out.write("                                class=\"caret\"></span></a>\r\n");
      out.write("                        <ul class=\"dropdown-menu\">\r\n");
      out.write("                            <li><a href=\"");
      out.print(request.getContextPath());
      out.write("/rutas/alta\">Alta Ruta</a></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </ul>\r\n");
      out.write("                    </li>\r\n");
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div><!-- /.navbar-collapse -->\r\n");
      out.write("        </div><!-- /.container-fluid -->\r\n");
      out.write("      </nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-12\">\r\n");
      out.write("                <h2>Formulario Alta Camion</h2>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br>\r\n");
      out.write("        ");
 if(errores != null && errores.size()>0){
      out.write("\r\n");
      out.write("            <ul class=\"alert alert-danger mx-5 px-5\">\r\n");
      out.write("            ");
 for(String error: errores.values()){
      out.write("\r\n");
      out.write("                <li>");
      out.print(error);
      out.write("</li>\r\n");
      out.write("            ");
}
      out.write("\r\n");
      out.write("            </ul>\r\n");
      out.write("        ");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <form action=\"");
      out.print(request.getContextPath());
      out.write("/camiones/editar\" method=\"post\">\r\n");
      out.write("                <input type=\"hidden\" name=\"id\" value=\"");
      out.print(camion.getId());
      out.write("\">\r\n");
      out.write("                <div class=\"col-md-12\">\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Matricula</label>\r\n");
      out.write("                        <input type=\"text\" name=\"matricula\" id=\"matricula\" class=\"form-control\" value=\"");
      out.print(camion.getMatricula() !=null ? camion.getMatricula(): "");
      out.write("\">\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("matricula")){
                            out.println("<span class='text-danger'>"+errores.get("matricula") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Tipo del Camion</label>\r\n");
      out.write("                        <select name=\"tipoCamion\" id=\"tipoCamion\" class=\"form-control\">\r\n");
      out.write("                            <option disabled=\"disabled\">---Seleccione---</option>\r\n");
      out.write("                            <option value=\"");
      out.print(camion.getTipoCamion() !=null ? camion.getTipoCamion(): "");
      out.write('"');
      out.write('>');
      out.print(camion.getTipoCamion() !=null ? camion.getTipoCamion(): "");
      out.write("</option>\r\n");
      out.write("                            ");

                                for (Tipos tipoEnum : tipos) {
                            
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( tipoEnum.name() );
      out.write('"');
      out.write('>');
      out.print( tipoEnum.name() );
      out.write("</option>\r\n");
      out.write("                            ");

                                }
                            
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("tipoCamion")){
                            out.println("<span class='text-danger'>"+errores.get("tipoCamion") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Modelo (año)</label>\r\n");
      out.write("                        <select name=\"modelo\" id=\"modelo\" class=\"form-control\">\r\n");
      out.write("                        <option disabled=\"disabled\">---Seleccione---</option>\r\n");
      out.write("                        <option selected=\"true\" value=\"");
      out.print(camion.getModelo() !=null ? camion.getModelo(): "");
      out.write('"');
      out.write('>');
      out.print(camion.getModelo() !=null ? camion.getModelo(): "");
      out.write("</option>\r\n");
      out.write("                        ");

                            for (String n : annios) {
                        
      out.write("\r\n");
      out.write("                            <option value=\"");
      out.print( n );
      out.write('"');
      out.write('>');
      out.print( n );
      out.write("</option>\r\n");
      out.write("\r\n");
      out.write("                        ");

                            }
                        
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("modelo")){
                            out.println("<span class='text-danger'>"+errores.get("modelo") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Marca</label>\r\n");
      out.write("                        <select name=\"marca\" id=\"marca\" class=\"form-control\">\r\n");
      out.write("                            <option disabled=\"disabled\">---Seleccione---</option>\r\n");
      out.write("                            <option selected=\"true\" value=\"");
      out.print(camion.getMarca() !=null ? camion.getMarca(): "");
      out.write('"');
      out.write('>');
      out.print(camion.getMarca() !=null ? camion.getMarca(): "");
      out.write("</option>\r\n");
      out.write("                            ");

                                for (Marcas marcaEnum : marcas) {
                            
      out.write("\r\n");
      out.write("                                <option value=\"");
      out.print( marcaEnum.name() );
      out.write('"');
      out.write('>');
      out.print( marcaEnum.name() );
      out.write("</option>\r\n");
      out.write("                            ");

                                }
                            
      out.write("\r\n");
      out.write("                        </select>\r\n");
      out.write("\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("marca")){
                            out.println("<span class='text-danger'>"+errores.get("marca") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Capacidad</label>\r\n");
      out.write("                        <input type=\"text\" name=\"capacidad\" id=\"capacidad\" class=\"form-control\" value=\"");
      out.print(camion.getCapaciad() !=null ? camion.getCapaciad(): "");
      out.write("\">\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("capacidad")){
                            out.println("<span class='text-danger'>"+errores.get("capacidad") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Kilometraje</label>\r\n");
      out.write("                        <input type=\"text\" name=\"kilometraje\" id=\"kilometraje\" class=\"form-control\" value=\"");
      out.print(camion.getKilometraje() !=null ? camion.getKilometraje(): "");
      out.write("\">\r\n");
      out.write("                        ");

                        if(errores != null && errores.containsKey("kilometraje")){
                            out.println("<span class='text-danger'>"+errores.get("kilometraje") + "</span>");
                        }
                        
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"\">Disponibilidad</label>\r\n");
      out.write("                        <input type=\"checkbox\" name=\"disponibilidad\" id=\"disponibilidad\" class=\"form-check-input\" value=\"1\" ");
      out.print(disponible);
      out.write(">\r\n");
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-success\">Guardar</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
